% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kobo-client.R
\name{KoboClient}
\alias{KoboClient}
\title{KoboClient}
\description{
A class to interact with the KoboToolbox API, extending \code{\link[crul:HttpClient]{crul::HttpClient}}.
}
\section{Super class}{
\code{\link[crul:HttpClient]{crul::HttpClient}} -> \code{KoboClient}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{KoboClient$new()}}
\item \href{#method-get}{\code{KoboClient$get()}}
\item \href{#method-clone}{\code{KoboClient$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="delete">}\href{../../crul/html/HttpClient.html#method-delete}{\code{crul::HttpClient$delete()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="handle_pop">}\href{../../crul/html/HttpClient.html#method-handle_pop}{\code{crul::HttpClient$handle_pop()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="head">}\href{../../crul/html/HttpClient.html#method-head}{\code{crul::HttpClient$head()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="patch">}\href{../../crul/html/HttpClient.html#method-patch}{\code{crul::HttpClient$patch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="post">}\href{../../crul/html/HttpClient.html#method-post}{\code{crul::HttpClient$post()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="print">}\href{../../crul/html/HttpClient.html#method-print}{\code{crul::HttpClient$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="put">}\href{../../crul/html/HttpClient.html#method-put}{\code{crul::HttpClient$put()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="retry">}\href{../../crul/html/HttpClient.html#method-retry}{\code{crul::HttpClient$retry()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="url_fetch">}\href{../../crul/html/HttpClient.html#method-url_fetch}{\code{crul::HttpClient$url_fetch()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="crul" data-topic="HttpClient" data-id="verb">}\href{../../crul/html/HttpClient.html#method-verb}{\code{crul::HttpClient$verb()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialization method for class "KoboClient".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$new(base_url, kobo_token = Sys.getenv("KBTBR_TOKEN"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{base_url}}{character. The full base URL of the API.}

\item{\code{kobo_token}}{character. The API token. Defaults to requesting
the system environment variable \code{KBTBR_TOKEN}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
Perform a GET request (with additional checks)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$get(path, query = list(), ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{character. Path component of the endpoint.}

\item{\code{query}}{list. A named list which is parsed to the query
component. The order is not hierarchical.}

\item{\code{...}}{crul-options. Additional option arguments, see
\code{\link[crul:HttpClient]{crul::HttpClient}} for reference}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Extension of the \code{crul::HttpClient$get()} method that checks
the HttpResponse object on status, that it is of type
\code{application/json}, and parses the response text subsequently from
JSON to R list representation.
}

\subsection{Returns}{
Returns a list, parsed from the HttpResponse JSON object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$get(path, query = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$get(path, query = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$get(path, query = list(), ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KoboClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
