% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kobo.R
\name{Kobo}
\alias{Kobo}
\title{Kobo Class}
\description{
Interface object for the Kobo API that can handle KoboClient instances
(sessions) for both API versions.
The Class exposes both generic and specific methods for HTTP requests /
interactions with the various endpoints.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{session_v2}}{KoboClient session for v2 of the API}

\item{\code{session_v1}}{KoboClient session for v1 of the API}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Kobo$new()}}
\item \href{#method-get}{\code{Kobo$get()}}
\item \href{#method-post}{\code{Kobo$post()}}
\item \href{#method-get_assets}{\code{Kobo$get_assets()}}
\item \href{#method-get_asset}{\code{Kobo$get_asset()}}
\item \href{#method-clone}{\code{Kobo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialization method for class "Kobo".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$new(
  base_url_v2 = NULL,
  base_url_v1 = NULL,
  kobo_token = Sys.getenv("KBTBR_TOKEN"),
  session_v2 = NULL,
  session_v1 = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{base_url_v2}}{character. The base URL of the API version 2
(known as /api/v2). For example: https://kobo.correlaid.org.}

\item{\code{base_url_v1}}{character. The base URL of the API of your KoBoCAT
API (also known as /api/v1). Defaults to NULL.
For example: https://kc.correlaid.org.}

\item{\code{kobo_token}}{character. The API token. Defaults to requesting
the systen environment \code{KBTBR_TOKEN}.}

\item{\code{session_v2}}{KoboClient. Alternatively, pass directly
a KoboClient instance for the API version v2.}

\item{\code{session_v1}}{KoboKlient. In addition to session_v2 one can pass
also a KoboClient instance for the API version v1.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\if{latex}{\out{\hypertarget{method-get}{}}}
\subsection{Method \code{get()}}{
Wrapper for the GET method of internal session objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$get(path, query = list(), version = "v2", format = "json", parse = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{character. Path component of the endpoint.}

\item{\code{query}}{list. A named list which is parsed to the query
component. The order is not hierarchical.}

\item{\code{version}}{character. Indicates on which API version the request should be executed (available: \code{v1}, \code{v2}). Defaults to \code{v2}.}

\item{\code{format}}{character. the format to request from the server. either 'json' or 'csv'. defaults to 'json'}

\item{\code{parse}}{whether or not to parse the HTTP response. defaults to TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list encoding of the json server reply if parse=TRUE.
Otherwise, it returns the server response as a crul::HttpResponse
object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-post"></a>}}
\if{latex}{\out{\hypertarget{method-post}{}}}
\subsection{Method \code{post()}}{
Wrapper for the POST method of internal session objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$post(path, body, version = "v2")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{character. Path component of the endpoint.}

\item{\code{body}}{R list or json-like string. A data payload to be sent
to the server.}

\item{\code{version}}{character. Indicates on which API version the request
should be executed (available: \code{v1}, \code{v2}). Defaults to \code{v2}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_assets"></a>}}
\if{latex}{\out{\hypertarget{method-get_assets}{}}}
\subsection{Method \code{get_assets()}}{
Example method to send a GET request to the \code{assets} endpoint
(due to default to \code{v2}, no further specification is needed).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$get_assets()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_asset"></a>}}
\if{latex}{\out{\hypertarget{method-get_asset}{}}}
\subsection{Method \code{get_asset()}}{
Get an asset given its id.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$get_asset(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{character. ID of the asset within the Kobo API.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Asset. object of class \link{Asset}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Kobo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
